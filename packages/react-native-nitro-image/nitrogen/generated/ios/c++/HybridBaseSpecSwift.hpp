///
/// HybridBaseSpecSwift.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridBaseSpec.hpp"

// Forward declaration of `HybridBaseSpecCxx` to properly resolve imports.
namespace NitroImage { class HybridBaseSpecCxx; }





#if __has_include(<NitroModules/HybridContext.hpp>)
#include <NitroModules/HybridContext.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

#include "NitroImage-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::image {

  /**
   * The C++ part of HybridBaseSpecCxx.swift.
   *
   * HybridBaseSpecSwift (C++) accesses HybridBaseSpecCxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridBaseSpecCxx can directly inherit from the C++ class HybridBaseSpec
   * to simplify the whole structure and memory management.
   */
  class HybridBaseSpecSwift: public virtual HybridBaseSpec {
  public:
    // Constructor from a Swift instance
    explicit HybridBaseSpecSwift(const NitroImage::HybridBaseSpecCxx& swiftPart);

  public:
    // Get the Swift part
    NitroImage::HybridBaseSpecCxx getSwiftPart() noexcept;

  public:
    // Get memory pressure
    size_t getExternalMemorySize() noexcept override;

  public:
    // Properties
    double getBaseValue() noexcept;

  public:
    // Methods
    

  private:
    NitroImage::HybridBaseSpecCxx _swiftPart;
  };

} // namespace margelo::nitro::image
