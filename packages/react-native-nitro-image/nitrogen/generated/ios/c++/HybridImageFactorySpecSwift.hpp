///
/// HybridImageFactorySpecSwift.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridImageFactorySpec.hpp"
#include <memory>

// Forward declaration of `HybridImageFactorySpecCxx` to properly resolve imports.
namespace NitroImage { class HybridImageFactorySpecCxx; }

// Forward declaration of `HybridImageSpec` to properly resolve imports.
namespace margelo::nitro::image { class HybridImageSpec; }
// Forward declaration of `HybridImageSpecSwift` to properly resolve imports.
namespace margelo::nitro::image { class HybridImageSpecSwift; }

#include <memory>
#include "HybridImageSpec.hpp"
#include "HybridImageSpecSwift.hpp"
#include <string>

#if __has_include(<NitroModules/HybridContext.hpp>)
#include <NitroModules/HybridContext.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

namespace margelo::nitro::image {

  /**
   * The C++ part of HybridImageFactorySpecCxx.swift.
   *
   * HybridImageFactorySpecSwift (C++) accesses HybridImageFactorySpecCxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridImageFactorySpecCxx can directly inherit from the C++ class HybridImageFactorySpec
   * to simplify the whole structure and memory management.
   */
  class HybridImageFactorySpecSwift: public virtual HybridImageFactorySpec {
  public:
    // Constructor from a Swift instance
    explicit HybridImageFactorySpecSwift(const NitroImage::HybridImageFactorySpecCxx& swiftPart);

  public:
    // Get the Swift part
    NitroImage::HybridImageFactorySpecCxx getSwiftPart() noexcept;

  public:
    // Get memory pressure
    size_t getExternalMemorySize() noexcept override;

  public:
    // Properties
    

  public:
    // Methods
    std::shared_ptr<margelo::nitro::image::HybridImageSpec> loadImageFromFile(const std::string& path) override;
    std::shared_ptr<margelo::nitro::image::HybridImageSpec> loadImageFromURL(const std::string& path) override;
    std::shared_ptr<margelo::nitro::image::HybridImageSpec> loadImageFromSystemName(const std::string& path) override;
    std::shared_ptr<margelo::nitro::image::HybridImageSpec> bounceBack(const std::shared_ptr<margelo::nitro::image::HybridImageSpec>& image) override;

  private:
    std::unique_ptr<NitroImage::HybridImageFactorySpecCxx> _swiftPart;
  };

} // namespace margelo::nitro::image
