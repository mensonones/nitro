///
/// JCallback_void.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include <functional>

#include <NitroModules/Callback.hpp>

namespace margelo::nitro::image {

  using namespace facebook;

  /**
   * C++ representation of the callback Callback_void.
   * This is a Kotlin `() -> Unit`, backed by a `std::function<...>`.
   */
  struct JCallback_void final: public jni::HybridClass<JCallback_void> {
  public:
    static jni::local_ref<JCallback_void::javaobject> fromCpp(const Callback<void()>& func) {
      return JCallback_void::newObjectCxxArgs(func);
    }

  public:
    void call() {
      return _func();
    }

  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/image/Callback_void;";
    static void registerNatives() {
      registerHybrid({makeNativeMethod("call", JCallback_void::call)});
    }

  private:
    explicit JCallback_void(const Callback<void()>& func): _func(func) { }

  private:
    friend HybridBase;
    Callback<void()> _func;
  };

} // namespace margelo::nitro::image
